import { Button, Row, Keyboard } from '../common';
import { QualificationProfileState } from '../../../../domain/entities/qualification-profile.entity';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã "–±–æ–ª–µ–π" –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–∏—à–∏
const painPointsByNiche: Record<string, { text: string; id: string }[]> = {
  infobiz: [
    { text: 'üìà –ü—Ä–æ–≥—Ä–µ–≤–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å', id: 'sales_automation' },
    { text: 'üîî –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö', id: 'support_automation' },
    { text: 'üí¨ –°–æ–∑–¥–∞—Ç—å –∫–æ–º—å—é–Ω–∏—Ç–∏', id: 'community' },
  ],
  ecommerce: [
    { text: '‚úÖ –£–≤–µ–ª–∏—á–∏—Ç—å —á–∏—Å–ª–æ –∑–∞–∫–∞–∑–æ–≤', id: 'sales_automation' },
    { text: 'üó£Ô∏è –ê–≤—Ç–æ-–æ—Ç–≤–µ—Ç—ã –æ —Ç–æ–≤–∞—Ä–∞—Ö', id: 'support_automation' },
    { text: 'üì¢ –°–æ–±–∏—Ä–∞—Ç—å –æ—Ç–∑—ã–≤—ã', id: 'leadgen' },
  ],
  // ... –¥—Ä—É–≥–∏–µ –Ω–∏—à–∏
};

const defaultPainPoints = [
  { text: 'üìà –ü—Ä–∏–≤–ª–µ—á—å –±–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤', id: 'leadgen' },
  { text: 'ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω—É', id: 'support_automation' },
];

/**
 * –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ "–±–æ–ª–∏" –∫–ª–∏–µ–Ω—Ç–∞.
 * @param props - niche: —Ç–µ–∫—É—â–∞—è –Ω–∏—à–∞ –∫–ª–∏–µ–Ω—Ç–∞.
 */
export function PainPointSelectionKeyboard(props: { niche: QualificationProfileState['niche'] }) {
  const options = (props.niche && painPointsByNiche[props.niche]) || defaultPainPoints;

  const rows = options.map(option => 
    Row([ Button({ text: option.text, callback_data: `pain:${option.id}` }) ])
  );

  return Keyboard(rows);
}

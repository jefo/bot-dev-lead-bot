import { PathSelectedOutput, UserWelcomedOutput } from '../application/dtos/onboarding.dtos';

// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞—Å—Å –∏–ª–∏ –æ–±—ä–µ–∫—Ç —Å –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å Telegram API
const telegramApi = {
  sendMessage: async (chatId: number, text: string, keyboard?: any) => {
    console.log(`
--- TO TELEGRAM (chatId: ${chatId}) ---
${text}
Keyboard: ${JSON.stringify(keyboard || {}, null, 2)}
-----------------------------------
`);
    return Promise.resolve();
  }
}

/**
 * –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –ø–æ—Ä—Ç–∞ userWelcomedOutPort.
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏.
 */
export async function welcomeUserAdapter(output: UserWelcomedOutput): Promise<void> {
  const text = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£–≤–∏–¥–µ–ª –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –Ω–∞ Kwork. –Ø ‚Äî –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –∑–∞ 3 –º–∏–Ω—É—Ç—ã —Å–æ–±—Ä–∞—Ç—å –∏–∑ –≤–∞—à–µ–π –∏–¥–µ–∏ —á–µ—Ç–∫–æ–µ –¢–ó –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. –ì–æ—Ç–æ–≤—ã?';
  const keyboard = {
    inline_keyboard: [
      [{ text: 'üë®‚Äçüíº –Ø –≤–ª–∞–¥–µ–ª–µ—Ü –±–∏–∑–Ω–µ—Å–∞', callback_data: 'business_owner' }],
      [{ text: 'üéØ –Ø –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ / —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', callback_data: 'specialist' }],
      [{ text: 'ü§î –Ø –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏–∑—É—á–∞—é', callback_data: 'explorer' }],
    ]
  };
  await telegramApi.sendMessage(output.telegramId, text, keyboard);
}

/**
 * –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –ø–æ—Ä—Ç–æ–≤ ...pathSelectedOutPort.
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É –æ –≤—ã–±–æ—Ä–µ –ø—É—Ç–∏.
 */
export async function pathSelectedAdapter(output: PathSelectedOutput): Promise<void> {
  const text = `–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—É—Ç—å '${output.role}'. –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ª–µ–¥—É–µ—Ç...`;
  await telegramApi.sendMessage(output.telegramId, text);
}